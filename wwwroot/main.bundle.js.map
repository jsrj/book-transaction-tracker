{"version":3,"sources":["/Volumes/BlackBox/Projects/machine-swarm/src async","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.html","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.scss","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.ts","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.html","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.scss","/Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.ts","/Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.html","/Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.scss","/Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.ts","/Volumes/BlackBox/Projects/machine-swarm/src/app/app.module.ts","/Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.html","/Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.scss","/Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.ts","/Volumes/BlackBox/Projects/machine-swarm/src/environments/environment.ts","/Volumes/BlackBox/Projects/machine-swarm/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;ACNA,iUAAiU,4KAA4K,0KAA0K,mqBAAmqB,eAAe,uBAAuB,eAAe,gTAAgT,mBAAmB,o8BAAo8B,iBAAiB,qH;;;;;;;ACAvoF;AACA;;;AAGA;AACA,4BAA6B,kBAAkB,EAAE,0BAA0B,8BAA8B,EAAE,kBAAkB,6BAA6B,EAAE,wDAAwD,2BAA2B,4BAA4B,mCAAmC,4BAA4B,EAAE,eAAe,eAAe,EAAE,kBAAkB,mBAAmB,EAAE,sBAAsB,mBAAmB,EAAE,6BAA6B,iBAAiB,EAAE,2BAA2B,+BAA+B,4BAA4B,uBAAuB,EAAE,aAAa,iBAAiB,EAAE;;AAE7nB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACA;AAEE;AAEf;AAWrC,IAAa,qBAAqB;IAahC,+BAAoB,QAAc;QAAd,aAAQ,GAAR,QAAQ,CAAM;IAAI,CAAC;IAEvC,wCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAI,KAAK,CAAC;QAE1B,+EAA+E;QAC/E,8EAA8E;QAC9E,IAAI,CAAC,UAAU,GAAG,IAAI,2DAAU,CAAC,kBAAQ;YACvC,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAChC,WAAW,CAAC;gBACR,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,qGAAqG;QACrG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACxB,IAAI,EAAE,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB;SACnC,CAAC,CAAC;IACL,CAAC;IAED,mDAAmB,GAAnB,UAAoB,EAAE;QACpB,KAAK,CAAC,wBAAsB,EAAI,CAAC,CAAC;IACpC,CAAC;IAED,2CAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YACjE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,4CAAY,GAAZ,UAAa,EAAE;QACb,IAAM,mBAAmB,GAAG;YAC1B,QAAQ,EAAE,IAAI,CAAC,cAAc;SAC9B,CAAC;QAEF,gHAAgH;QAChH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qCAAmC,EAAI,EAAE,mBAAmB,CAAC,CAAC,SAAS,EAAE,CAAC;QAE5F,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC;IAChC,CAAC;IAED,yCAAS,GAAT,UAAU,KAAK;QACb,IAAM,oBAAoB,GAAG;YAC3B,IAAI,EAAE,KAAK;YACX,eAAe,EAAE,cAAc;YAC/B,eAAe,EAAE,OAAO;YACxB,MAAM,EAAE,CAAC;SACV;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wCAAwC,EAAE,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC;IACjG,CAAC;IAED,0CAAU,GAAV,UAAW,EAAE;QACX,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,qCAAmC,EAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5E,CAAC;IACH,4BAAC;AAAD,CAAC;AA5EY,qBAAqB;IANjC,wFAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,oGAA8C;QAC9C,oGAA8C;KAC/C,CAAC;yDAe8B,2DAAI,oBAAJ,2DAAI;GAbvB,qBAAqB,CA4EjC;AA5EiC;;;;;;;;;AChBlC,qSAAqS,2HAA2H,4b;;;;;;;ACAha;AACA;;;AAGA;AACA,kCAAmC,kBAAkB,oBAAoB,EAAE,aAAa,mBAAmB,EAAE;;AAE7G;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACXoD;AACA;AAEA;AAEf;AAOrC,IAAa,4BAA4B;IAEvC,sCAAoB,QAAc;QAAd,aAAQ,GAAR,QAAQ,CAAM;IAAI,CAAC;IAMvC,+CAAQ,GAAR;QAAA,iBAiBC;QAfC,+EAA+E;QAC/E,8EAA8E;QAC9E,IAAI,CAAC,UAAU,GAAG,IAAI,2DAAU,CAAC,kBAAQ;YACvC,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAChC,WAAW,CAAC;gBACR,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,qGAAqG;QACrG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACxB,IAAI,EAAE,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB;SACnC,CAAC,CAAC;IACL,CAAC;IAED,mDAAY,GAAZ;QAAA,iBAEC;QADC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG,IAAK,YAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,EAAE,EAA7B,CAA6B,CAAC,CAAC;IAChH,CAAC;IACD,iDAAU,GAAV,UAAW,EAAE;QACX,IAAM,YAAY,GAAG;YACpB,eAAe,EAAE,QAAQ;YACzB,eAAe,EAAE,QAAQ;SACzB;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,4CAA0C,EAAI,EAAE,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;IAChG,CAAC;IACH,mCAAC;AAAD,CAAC;AArCY,4BAA4B;IALxC,wFAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,kHAAqD;QACrD,kHAAqD;KACtD,CAAC;yDAG8B,2DAAI,oBAAJ,2DAAI;GAFvB,4BAA4B,CAqCxC;AArCwC;;;;;;;;;ACZzC,0HAA0H,cAAc,mBAAmB,qHAAqH,gBAAgB,yDAAyD,OAAO,yS;;;;;;;ACAhW;AACA;;;AAGA;AACA,4CAA6C,WAAW,oBAAoB,cAAc,gBAAgB,uBAAuB,uCAAuC,uBAAuB,iBAAiB,gBAAgB,wBAAwB,oBAAoB,gBAAgB,EAAE,mBAAmB,gBAAgB,EAAE,gBAAgB,sBAAsB,kBAAkB,mBAAmB,kCAAkC,+BAA+B,0BAA0B,sBAAsB,0BAA0B,EAAE,yBAAyB,iCAAiC,8BAA8B,yBAAyB,mBAAmB,mBAAmB,yBAAyB,0BAA0B,oCAAoC,EAAE,kCAAkC,oBAAoB,4BAA4B,yBAAyB,kCAAkC,qBAAqB,2BAA2B,8CAA8C,EAAE,kBAAkB,+BAA+B,4BAA4B,uBAAuB,mBAAmB,iBAAiB,cAAc,oBAAoB,wBAAwB,iBAAiB,uBAAuB,mCAAmC,oCAAoC,EAAE,yBAAyB,8BAA8B,mBAAmB,mBAAmB,mBAAmB,EAAE,2BAA2B,iBAAiB,qBAAqB,EAAE;;AAEh+C;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;ACX0C;AAO1C,IAAa,YAAY;IALzB;QAMS,UAAK,GAAY,yBAAyB,CAAC;QAC3C,eAAU,GAAO,OAAO,CAAC;QACzB,mBAAc,GAAG,QAAQ,CAAC;IAcnC,CAAC;IAXC,uCAAgB,GAAhB;QACE,EAAE,EAAC,IAAI,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;YACjC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACjC,CAAC;IACH,CAAC;IAEH,mBAAC;AAAD,CAAC;AAjBY,YAAY;IALxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,0EAAmC;KACpC,CAAC;GACW,YAAY,CAiBxB;AAjBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,eAAe;AACyC;AACY;AACZ;AACC;AAEzD,aAAa;AAC0D;AACC;AACC;AAEC;AACK;AAE/E,iBAAiB;AACyC;AAC0B;AACF;AACqB;AA2BvG,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAzBrB,sFAAQ,CAAC;QACR,YAAY,EACV;YACE,oEAAY;YACZ,wGAAqB;YACrB,qGAAoB;YACpB,6HAA4B;SAC7B;QAEH,OAAO,EACL;YACE,iEAAU;YACV,gFAAU;YACV,mEAAW;YACX,kFAAW;YACX,oFAAY;YACZ,sFAAa;YACb,gFAAa;YACb,qGAAuB;SACxB;QAEH,SAAS,EAAE,CAAC,iEAAU,CAAG;QACzB,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GAEW,SAAS,CAAI;AAAJ;;;;;;;;AC7CtB,ilC;;;;;;;ACAA;AACA;;;AAGA;AACA,sCAAuC,uBAAuB,4BAA4B,EAAE,kBAAkB,mBAAmB,wBAAwB,EAAE;;AAE3J;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACXkD;AACA;AAOlD,IAAa,oBAAoB;IAE/B,8BAAoB,QAAc;QAAd,aAAQ,GAAR,QAAQ,CAAM;IAAI,CAAC;IASvC,uCAAQ,GAAR;IACA,CAAC;IAED,yCAAU,GAAV;QAAA,iBAgBC;QAfC,IAAM,YAAY,GAAG;YACnB,KAAK,EAAS,IAAI,CAAC,YAAY;YAC/B,MAAM,EAAQ,IAAI,CAAC,aAAa;YAChC,YAAY,EAAE,IAAI,CAAC,eAAe;YAClC,WAAW,EAAG,IAAI,CAAC,kBAAkB;YACrC,IAAI,EAAU,IAAI,CAAC,WAAW;SAC/B,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,EAAE,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;YACvF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,GAAS,EAAE,CAAC;YAC7B,KAAI,CAAC,aAAa,GAAQ,EAAE,CAAC;YAC7B,KAAI,CAAC,eAAe,GAAM,EAAE,CAAC;YAC7B,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,KAAI,CAAC,WAAW,GAAU,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,2BAAC;AAAD,CAAC;AA/BY,oBAAoB;IALhC,wFAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kGAA6C;QAC7C,kGAA6C;KAC9C,CAAC;yDAG8B,2DAAI,oBAAJ,2DAAI;GAFvB,oBAAoB,CA+BhC;AA/BgC;;;;;;;;;;ACRjC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<kendo-grid [data]=\\\"gridData\\\" [height]=\\\"620\\\">\\n    <kendo-grid-column width=\\\"60\\\">\\n        <ng-template kendoGridCellTemplate let-dataItem>\\n            <span class=\\\"issue\\\" *ngIf=\\\"dataItem.quantity > dataItem.issued\\\"><i class=\\\"fa fa-sign-out\\\" (click)=\\\"issueBook(dataItem.title)\\\"></i>&nbsp; Issue </span>\\n            <span class=\\\"delete\\\" *ngIf=\\\"dataItem.quantity <= 0\\\"><i class=\\\"fa fa-trash\\\" (click)=\\\"deleteItem(dataItem.id)\\\">                 </i>&nbsp; Delete</span>\\n            <span class=\\\"oos\\\"  *ngIf=\\\"dataItem.quantity == dataItem.issued\\\"><i class=\\\"fa fa-times-circle\\\">                                </i>&nbsp; Out   </span>\\n        </ng-template>\\n    </kendo-grid-column>\\n    <kendo-grid-column field=\\\"title\\\"        title=\\\"Title\\\"        width=\\\"150\\\"></kendo-grid-column>\\n    <kendo-grid-column field=\\\"author\\\"       title=\\\"Author\\\"       width=\\\"90\\\" ></kendo-grid-column>\\n    <kendo-grid-column field=\\\"bookCategory\\\" title=\\\"Genre\\\"        width=\\\"100\\\"></kendo-grid-column>\\n    <kendo-grid-column field=\\\"publishDate\\\"  title=\\\"Publish Date\\\" width=\\\"90\\\" ></kendo-grid-column>\\n    <kendo-grid-column field=\\\"isbn\\\"         title=\\\"ISBN\\\"         width=\\\"120\\\">\\n      <ng-template kendoGridCellTemplate let-dataItem>\\n        <a href=\\\"https://isbnsearch.org/isbn/{{dataItem.isbn}}\\\" target=\\\"_blank\\\">{{dataItem.isbn}}</a>\\n      </ng-template>\\n    </kendo-grid-column>\\n    <kendo-grid-column field=\\\"quantity\\\"     title=\\\"In Stock\\\" width=\\\"80\\\">\\n      <ng-template kendoGridCellTemplate let-dataItem>\\n        <div (click)=\\\"selectForEdit(dataItem.id)\\\">\\n          <span  *ngIf=\\\"selectedForEdit != dataItem.id\\\">{{dataItem.quantity}}</span>\\n          <kendo-textbox-container *ngIf=\\\"selectedForEdit == dataItem.id\\\">\\n            <form class=\\\"book-quantity-update\\\" (ngSubmit)=\\\"editQuantity(dataItem.id)\\\">\\n                <kendo-numerictextbox\\n                  class=\\\"override-numeric-input\\\"\\n                  name=\\\"quantity\\\"\\n                  [value]=\\\"dataItem.quantity\\\"\\n                  [min]=\\\"0\\\"\\n                  [max]=\\\"100\\\"\\n                  [autoCorrect]=\\\"autoCorrect\\\"\\n                  [(ngModel)]=\\\"updateQuantity\\\">\\n                </kendo-numerictextbox>\\n                <button type=\\\"submit\\\">OK</button>\\n              </form>\\n          </kendo-textbox-container>\\n        </div>\\n      </ng-template>\\n    </kendo-grid-column>\\n    <kendo-grid-column field=\\\"issued\\\"       title=\\\"Issued\\\"       width=\\\"50\\\" class=\\\"active-orders\\\">\\n      <ng-template kendoGridCellTemplate let-dataItem>\\n        <span (click)=\\\"ViewTransactionById(dataItem.id)\\\">{{dataItem.issued}} <i class=\\\"fa fa-eye\\\"></i></span>\\n      </ng-template>\\n    </kendo-grid-column>\\n</kendo-grid>\\n\\n<br>\\n<br>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.html\n// module id = ../../../../../src/app/api-items-list/api-items-list.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a {\\n  color: orange; }\\n\\n.k-textbox-container {\\n  padding: unset !important; }\\n\\n.edit-button {\\n  margin: 0 45% !important; }\\n\\n/* Overrides */\\n.k-numerictextbox .k-numeric-wrap {\\n  width: 65px !important;\\n  margin: 0rem !important;\\n  margin-top: -1.2rem !important;\\n  padding: 6px !important; }\\n\\n.fa-trash {\\n  color: red; }\\n\\n.fa-sign-out {\\n  color: #0D8549; }\\n\\n.fa-times-circle {\\n  color: darkred; }\\n\\n.override-numeric-input {\\n  width: 100px; }\\n\\n.book-quantity-update {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content; }\\n\\n.fa-eye {\\n  float: right; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.scss\n// module id = ../../../../../src/app/api-items-list/api-items-list.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Http              } from '@angular/Http';\nimport { FormsModule       } from '@angular/forms';\nimport { Observable        } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/toPromise';\n\n// Import External Data\nimport { sampleBooks } from '../partials/demo-products';\n\n@Component({\n  selector: 'app-api-items-list',\n  templateUrl: './api-items-list.component.html',\n  styleUrls: ['./api-items-list.component.scss']\n})\n\nexport class ApiItemsListComponent implements OnInit {\n\n  private selectedForEdit: string;\n  private gridData: any[];\n  private apiResponse;\n  private apiwatcher: Observable<Array<object>>;\n  private show: boolean;\n\n  public  toggleText: string;\n  public  updateRemoteData: boolean;\n  public  autoCorrect:     boolean;\n  public  updateQuantity:  number;\n\n  constructor(private _httpReq: Http) { }\n\n  ngOnInit() {\n    this.show = true;\n    this.selectedForEdit = '';\n    this.autoCorrect  = false;\n\n    // Polls the API to display current database information in 1 second intervals.\n    // Change this to only fire off when a change is made by user before building.\n    this.apiwatcher = new Observable(observer => {\n      this.getBookData();\n      observer.next(this.apiResponse);\n      setInterval(() => {\n          this.getBookData();\n          observer.next(this.apiResponse);\n      }, 2500);\n    });\n\n    // Sets the View to apiwatcher observable so that data can be refreshed without reloading entire app.\n    this.apiwatcher.subscribe({\n      next: info => this.gridData = info\n    });\n  }\n\n  viewTransactionById(id) {\n    alert(`clicked on book id ${id}`);\n  }\n\n  getBookData() {\n    this._httpReq.get('http://localhost:5000/api/books').subscribe((res) => {\n      this.apiResponse = res.json();\n    });\n  }\n\n  selectForEdit(id) {\n    this.selectedForEdit = id;\n  }\n\n  editQuantity(id) {\n    const quantityUpdateModel = {\n      quantity: this.updateQuantity\n    };\n\n    // This response needs to either be sent as a promise, or as a subscription or else the request will not submit.\n    this._httpReq.patch(`http://localhost:5000/api/books/${id}`, quantityUpdateModel).toPromise();\n\n      this.selectedForEdit = '';\n      this.updateQuantity  = null;\n  }\n\n  issueBook(title) {\n    const newTransactionTicket = {\n      Book: title,\n      TransactionDate: \"generate-new\",\n      TransactionType: \"ISSUE\",\n      Closed: 0\n    }\n    this._httpReq.post('http://localhost:5000/api/transactions', newTransactionTicket).toPromise();\n  }\n\n  deleteItem(id) {\n    this._httpReq.delete(`http://localhost:5000/api/books/${id}`).toPromise();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-items-list/api-items-list.component.ts","module.exports = \"<kendo-grid [data]=\\\"gridData\\\" [height]=\\\"620\\\">\\n  <kendo-grid-column width=\\\"180\\\">\\n    <ng-template kendoGridCellTemplate let-orderItem>\\n      <span class=\\\"return\\\" (click)=\\\"returnBook(orderItem.id)\\\" *ngIf=\\\"!orderItem.closed\\\"><i class=\\\"fa fa-sign-in\\\"></i> &nbsp; Return This Book </span>\\n      <span class=\\\"closed\\\" *ngIf=\\\"orderItem.closed\\\"><i class=\\\"fa fa-thumbs-up\\\"></i> &nbsp; Turned In </span>\\n    </ng-template>\\n  </kendo-grid-column>\\n  <kendo-grid-column field=\\\"id\\\"              title=\\\"Order ID\\\"   ></kendo-grid-column>\\n  <kendo-grid-column field=\\\"book\\\"            title=\\\"Book Issued\\\"></kendo-grid-column>\\n  <kendo-grid-column field=\\\"transactionDate\\\" title=\\\"Issue Date\\\" ></kendo-grid-column>\\n  <kendo-grid-column field=\\\"updateDate\\\"      title=\\\"Return Date\\\"></kendo-grid-column>\\n</kendo-grid>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.html\n// module id = ../../../../../src/app/api-transactions-list/api-transactions-list.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".return {\\n  color: orange;\\n  cursor: pointer; }\\n\\n.closed {\\n  color: #98D083; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.scss\n// module id = ../../../../../src/app/api-transactions-list/api-transactions-list.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core'  ;\nimport { Http              } from '@angular/Http'  ;\nimport { FormsModule       } from '@angular/forms' ;\nimport { Observable        } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Component({\n  selector: 'app-api-transactions-list',\n  templateUrl: './api-transactions-list.component.html',\n  styleUrls: ['./api-transactions-list.component.scss']\n})\nexport class ApiTransactionsListComponent implements OnInit {\n\n  constructor(private _httpReq: Http) { }\n\n    private gridData: any[];\n    private apiwatcher : Observable<Array<object>>;\n    private apiResponse;\n\n  ngOnInit() {\n\n    // Polls the API to display current database information in 1 second intervals.\n    // Change this to only fire off when a change is made by user before building.\n    this.apiwatcher = new Observable(observer => {\n      this.getOrderData();\n      observer.next(this.apiResponse);\n      setInterval(() => {\n          this.getOrderData();\n          observer.next(this.apiResponse);\n      }, 2500);\n    });\n\n    // Sets the View to apiwatcher observable so that data can be refreshed without reloading entire app.\n    this.apiwatcher.subscribe({\n      next: info => this.gridData = info\n    });\n  }\n\n  getOrderData(){\n    this._httpReq.get('http://localhost:5000/api/transactions').subscribe((res) => this.apiResponse = res.json());\n  }\n  returnBook(id) {\n    const returnTicket = {\n\t    TransactionDate: \"update\",\n\t    TransactionType: \"RETURN\"\n    }\n    this._httpReq.patch(`http://localhost:5000/api/transactions/${id}`, returnTicket).toPromise();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/api-transactions-list/api-transactions-list.component.ts","module.exports = \"<div class=\\\"topnav\\\">\\n    <div class=\\\"form\\\">\\n        <app-new-book-form style=\\\"width: fit-content; float: right; margin: -0.7rem 0;\\\"></app-new-book-form>\\n        <div class=\\\"button-box\\\">\\n          <button (click)=\\\"toggleActiveView()\\\">View {{otherViewTitle}}</button>\\n        </div>\\n    </div>\\n    <h3>\\n      {{title}}\\n    </h3>\\n</div>\\n\\n<div class=\\\"kendo-grid-container\\\" *ngIf=\\\"activeView == 'books'\\\">\\n  <app-api-items-list></app-api-items-list>\\n</div>\\n<div class=\\\"kendo-grid-container\\\" *ngIf=\\\"activeView == 'transactions'\\\">\\n  <app-api-transactions-list></app-api-transactions-list>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@charset \\\"UTF-8\\\";\\n.topnav {\\n  position: fixed;\\n  top: 0rem;\\n  z-index: 10;\\n  margin-bottom: 6px;\\n  box-shadow: 0px 0px 14px 1px black;\\n  border-radius: 3px;\\n  height: 4rem;\\n  width: 100%;\\n  background: #69AEFF;\\n  overflow: unset;\\n  clear: both; }\\n  .topnav .form {\\n    bottom: 5; }\\n  .topnav h3 {\\n    font-size: 1rem;\\n    float: left;\\n    color: white;\\n    height: -webkit-fit-content;\\n    height: -moz-fit-content;\\n    height: fit-content;\\n    display: inline;\\n    margin: 1.5rem 10px; }\\n  .topnav .button-box {\\n    width: -webkit-fit-content;\\n    width: -moz-fit-content;\\n    width: fit-content;\\n    float: right;\\n    margin: 1rem;\\n    margin-right: 2rem;\\n    padding-right: 3rem;\\n    border-right: 2px solid black; }\\n    .topnav .button-box button {\\n      height: 3em;\\n      margin-top: -0.5rem;\\n      color: aliceblue;\\n      background: rebeccapurple;\\n      border: none;\\n      border-radius: 3px;\\n      box-shadow: aliceblue 0px 0px 7px 0px; }\\n\\n#view-select {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin: 0 auto;\\n  bottom: 0rem;\\n  left: 45%;\\n  position: fixed;\\n  background: #4C5FB1;\\n  height: 3rem;\\n  border-radius: 7px;\\n  border-bottom-left-radius: 0px;\\n  border-bottom-right-radius: 0px; }\\n  #view-select button {\\n    background: transparent;\\n    border: none;\\n    padding: 5px;\\n    color: white; }\\n\\n.kendo-grid-container {\\n  height: 95vh;\\n  overflow: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title          = 'Books Inventory Tracker';\n  public activeView     = 'books';\n  public otherViewTitle = 'Orders';\n\n\n  toggleActiveView() {\n    if(this.activeView == 'books') {\n      this.activeView = 'transactions';\n      this.otherViewTitle = 'Books';\n    }\n    else {\n      this.activeView = 'books';\n      this.otherViewTitle = 'Orders';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/app.component.ts","// Core Modules\nimport { NgModule                } from '@angular/core';\nimport { BrowserModule           } from '@angular/platform-browser';\nimport { HttpModule              } from '@angular/Http';\nimport { FormsModule             } from '@angular/forms';\n\n// UI Modules\nimport { GridModule              } from '@progress/kendo-angular-grid';\nimport { PopupModule             } from '@progress/kendo-angular-popup';\nimport { InputsModule            } from '@progress/kendo-angular-inputs';\nimport { MatMenuModule           } from '@angular/material';\nimport { ButtonsModule           } from '@progress/kendo-angular-buttons';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// App Components\nimport { AppComponent            } from './app.component';\nimport { ApiItemsListComponent   } from './api-items-list/api-items-list.component';\nimport { NewBookFormComponent    } from './new-book-form/new-book-form.component';\nimport { ApiTransactionsListComponent } from './api-transactions-list/api-transactions-list.component';\n\n@NgModule({\n  declarations:\n    [\n      AppComponent,\n      ApiItemsListComponent,\n      NewBookFormComponent,\n      ApiTransactionsListComponent\n    ],\n\n  imports:\n    [\n      HttpModule,\n      GridModule,\n      FormsModule,\n      PopupModule,\n      InputsModule,\n      ButtonsModule,\n      BrowserModule,\n      BrowserAnimationsModule\n    ],\n\n  providers: [HttpModule  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/app.module.ts","module.exports = \"<form class=\\\"input-form\\\" (ngSubmit)=\\\"addNewBook()\\\">\\n    <kendo-textbox-container floatingLabel=\\\"Title\\\">\\n        <input kendoTextBox name=\\\"title\\\" [(ngModel)]=\\\"newBookTitle\\\" />\\n    </kendo-textbox-container>\\n\\n    <kendo-textbox-container floatingLabel=\\\"Author\\\">\\n        <input kendoTextBox name=\\\"author\\\" [(ngModel)]=\\\"newBookAuthor\\\" />\\n    </kendo-textbox-container>\\n\\n    <kendo-textbox-container floatingLabel=\\\"Genre\\\">\\n        <input kendoTextBox name=\\\"bookCategory\\\" [(ngModel)]=\\\"newBookCategory\\\" />\\n    </kendo-textbox-container>\\n\\n    <kendo-textbox-container floatingLabel=\\\"Publish Date\\\">\\n        <input kendoTextBox name=\\\"publishDate\\\" [(ngModel)]=\\\"newBookPublishDate\\\" />\\n    </kendo-textbox-container>\\n\\n    <kendo-textbox-container floatingLabel=\\\"ISBN\\\">\\n        <input kendoTextBox name=\\\"isbn\\\" [(ngModel)]=\\\"newBookISBN\\\" />\\n    </kendo-textbox-container>\\n\\n    <kendo-textbox-container>\\n        <button kendoButton class=\\\"k-textbox bitt-themed\\\" type=\\\"submit\\\"> Add New Book </button>\\n    </kendo-textbox-container>\\n  </form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.html\n// module id = ../../../../../src/app/new-book-form/new-book-form.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".input-form {\\n  margin-top: 0.5rem;\\n  margin: 0.5rem 10px 0px; }\\n\\n.bitt-themed {\\n  color: #F5F5F5;\\n  background: #FFBE5B; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.scss\n// module id = ../../../../../src/app/new-book-form/new-book-form.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Http              } from '@angular/Http';\n\n@Component({\n  selector: 'app-new-book-form',\n  templateUrl: './new-book-form.component.html',\n  styleUrls: ['./new-book-form.component.scss']\n})\nexport class NewBookFormComponent implements OnInit {\n\n  constructor(private _httpReq: Http) { }\n  public newBookTitle:       string;\n  public newBookAuthor:      string;\n  public newBookCategory:    string;\n  public newBookPublishDate: string;\n  public newBookISBN:        string;\n\n\n\n  ngOnInit() {\n  }\n\n  addNewBook() {\n    const newBookModel = {\n      title :       this.newBookTitle,\n      author:       this.newBookAuthor,\n      bookCategory: this.newBookCategory,\n      publishDate:  this.newBookPublishDate,\n      isbn:         this.newBookISBN\n    };\n    this._httpReq.post('http://localhost:5000/api/books', newBookModel).toPromise().then((res) => {\n      console.log(res);\n      this.newBookTitle       = '';\n      this.newBookAuthor      = '';\n      this.newBookCategory    = '';\n      this.newBookPublishDate = '';\n      this.newBookISBN        = '';\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/app/new-book-form/new-book-form.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/BlackBox/Projects/machine-swarm/src/main.ts"],"sourceRoot":"webpack:///"}